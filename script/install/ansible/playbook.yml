---
- hosts: postal
  # connection: local
  vars:
    ansible_user: root
    remote_user: root


    net_interfaces:
      - name: eth0:0
        ip4: '54.38.209.145'
        netmask: '255.255.255.255'
        gw4: '54.38.209.145'
      - name: eth0:1
        ip4: '54.38.209.146'
        netmask: '255.255.255.255'
        gw4: '54.38.209.146'

    # Ruby Configuration
    ruby_install_from_source: true
    ruby_download_url: https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.7.tar.gz
    ruby_version: 2.3.7

    ruby_install_gems:
      - bundler
      - procodile



    # NodeJS Configuration
    nodejs_version: '8.x'



    # MySQL Configuration
    mysql_vendor: mariadb # mysql or mariadb
    # mysql_upstream_version: ~ # MariaDB: 10.2, MySQL: 5.7

    mysql_root_password: 'My $3cr3t password'



    # /etc/hosts Configuration
    etc_hosts_add_all_hosts: true
    etc_hosts_pri_dns_name: 'example.com'



    # RabbitMQ Configuration
    erlang_install_from_rabbitmq: true
    erlang_version: '19.3.6.8'

    rabbitmq_version: '3.7.4'

    # Postal Configuration
    postal_hostname: 'example.com'
    postal_mysql_password: 'p0stalpassw0rd'

    # Certbot (for Let's Encrypt) Configuration
    certbot_admin_email: hello@example.com
    certbot_create_if_missing: yes
    certbot_create_standalone_stop_services: []
    certbot_certs:
      - domains:
        - '{{ postal_hostname }}'

    # Nginx Configuration

    install: 
      - ruby: yes
      - nodejs: yes
      - git: yes
      - mysql: yes
      - etc-hosts: yes
      - rabbitmq: yes
      - certbot: yes
      - nginx: yes
    
    options: 
      - firewalld
        enabled: yes # Disable firewalld
        open_ports: 
          - 4369/tcp
          - 25672/tcp
          - 5671-5672/tcp
          - 15672/tcp
          - 61613-61614/tcp
          - 1883/tcp
          - 8883/tcp

  pre_tasks:
    - name: Setup networking (interfaces)
      template:
        src: ./templates/ifcfg-interface
        dest: /etc/sysconfig/network-scripts/ifcfg-{{ item.name }}
        owner: root
        group: root
        mode: 644
      with_items: '{{ net_interfaces }}'
    
    - name: Restart Network
      service: 
        name: network
        state: restarted

    - name: Stop and Disable service firewalld, if running
      service:
        name: firewalld
        state: stopped
        enabled: no
      when: option.firewalld.enabled == 'no'


    - name: Start and Enable service firewalld, if disabled
      service:
        name: firewalld
        state: started
        enabled: no
      when: option.firewalld.enabled == 'yes'

    - firewalld:
        service: https
        permanent: true
        state: enabled
      when: option.firewalld.enabled == 'yes'

    - firewalld:
        service: https
        permanent: true
        state: enabled
      when: option.firewalld.enabled == 'yes'

    - firewalld:
        port: 161-162/udp
        permanent: true
        state: enabled
      with_items: '{{ options.firewald.open_ports }}'
      when: option.firewalld.enabled == 'yes'

  roles:
    - role: geerlingguy.ruby
      when: install.ruby == 'yes'

    - role: geerlingguy.nodejs
      when: install.nodejs == 'yes'

    - role: geerlingguy.git
      when: install.git == 'yes'

    - role: mjanser.mysql
      when: install.mysql == 'yes'

    - role: mrlesmithjr.etc-hosts
      when: install.etc-hosts == 'yes'

    # - role: geerlingguy.rabbitmq
    - role: './roles/geerlingguy.rabbitmq'
      when: install.rabbitmq == 'yes'

    - role: './roles/postal'

    - role: geerlingguy.certbot
      when: install.certbot == 'yes'

    - role: geerlingguy.nginx
      when: install.nginx == 'yes'


  post_tasks:
    - name: Install Postal Nginx config
      template:
        src: ./templates/nginx.cfg
        dest: /etc/nginx/conf.d/{{ postal_hostname }}.conf
        owner: root
        group: root
        mode: 644 

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted